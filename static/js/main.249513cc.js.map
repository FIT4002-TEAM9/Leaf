{"version":3,"file":"static/js/main.249513cc.js","mappings":"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","sources":["src/components/core/views/LeafTextInput/LeafTextInput.tsx","src/components/core/views/LeafButton/LeafButton.tsx","src/model/Session.ts","src/model/FormEntry.ts","src/state/LeafPublisher.ts","src/state/LeafValuePublisher.ts","src/state/StateManager.ts","src/language/errors/UnreachableCaseError.ts","src/state/environment/OS.ts","src/state/environment/ScreenType.ts","src/state/environment/Environment.ts","src/components/Form.tsx","src/components/FormOutput.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from 'react';\nimport { TextInput } from 'react-native-paper';\n\ninterface Props {\n    label: string;\n    type: LeafTextInputType;\n    onTextChange: (text: string) => void;\n}\n\nexport enum LeafTextInputType {\n    flat = \"flat\",\n    outlined = \"outlined\"\n}\n\nconst LeafTextInput: React.FC<Props> = ({ label, type, onTextChange }) => {\n    const [text, setText] = React.useState(\"\");\n\n    return (\n        <TextInput\n            label={label}\n            value={text}\n            mode={type}\n            onChangeText={text => {\n                setText(text)\n                onTextChange(text);\n            }}\n        />\n    );\n}\n\nexport default LeafTextInput;","import React from 'react';\nimport { Button } from 'react-native-paper';\n\ninterface Props {\n    label: string\n    type: LeafButtonType;\n    icon?: string; // https://pictogrammers.com/library/mdi/\n    disabled?: boolean;\n    onPress: () => void;\n}\n\nexport enum LeafButtonType {\n    filled = \"contained\",\n    outlined = \"outlined\"\n}\n\nconst LeafButton: React.FC<Props> = ({ label, type, icon = null, disabled = false, onPress }) => {\n    return (\n        <Button \n            icon={icon}\n            mode={type} \n            onPress={onPress}\n            disabled={disabled}\n        >\n            {label}\n        </Button>\n    );\n}\n\nexport default LeafButton;","import FormEntry from \"./FormEntry\";\n\nclass Session {\n\n    public static readonly instance = new Session()\n\n    /**\n     * THIS IS A DEMO PROPERTY\n     */\n    public formEntry?: FormEntry = null\n\n    private constructor() { }\n\n}\n\nexport default Session;","\n/**\n * THIS IS A DEMO CLASS\n */\n\nclass FormEntry {\n\n    private text1: string\n    private text2: string\n\n    constructor(text1, text2) {\n        this.text1 = text1\n        this.text2 = text2\n    }\n\n    public getContent(): string {\n        return `Text 1: ${this.text1}\\nText 2: ${this.text2}`\n    }\n\n}\n\nexport default FormEntry;","import { configureStore, createSlice } from \"@reduxjs/toolkit\";\n\n/**\n * A redux wrapper for managing application-wide state using the publisher-subscriber pattern.\n * To only be initialised within StateManager.\n */\nclass LeafPublisher {\n\n    private readonly slice = createSlice({\n        name: 'LeafPublisher',\n        initialState: {\n            value: 0\n        },\n        reducers: {\n            newForm: state => {\n                state.value = (state.value + 1)%10;\n            }\n        }\n    })\n\n    private readonly publisher = configureStore({\n        reducer: this.slice.reducer\n    })\n\n    public subscribe(callback: () => void) {\n        this.publisher.subscribe(callback);\n    }\n\n    public publish() {\n        this.publisher.dispatch(this.slice.actions.newForm());\n    }\n\n}\n\nexport default LeafPublisher;","import { Draft, PayloadAction, configureStore, createSlice } from \"@reduxjs/toolkit\";\n\n/**\n * A redux wrapper for managing application-wide state using the publisher-subscriber pattern.\n * The class contains the state value (generic type) to be read.\n * To only be initialised within StateManager.\n */\nclass LeafValuePublisher<Type> {\n\n    private readonly slice;\n    private readonly publisher;\n\n    constructor(initialState: Type) {\n        this.slice = createSlice({\n            name: 'LeafValuePublisher',\n            initialState: {\n                value: initialState\n            },\n            reducers: {\n                publishAction: (state, newValue: PayloadAction<Draft<Type>>) => {\n                    state.value = newValue.payload;\n                }\n            }\n        });\n        \n        this.publisher = configureStore({\n            reducer: this.slice.reducer\n        });\n    }\n\n    public subscribe(callback: () => void) {\n        this.publisher.subscribe(callback);\n    }\n\n    public publish(value: Type) {\n        this.publisher.dispatch(this.slice.actions.publishAction(value));\n    }\n\n    public read(): Type {\n        return this.publisher.getState().value;\n    }\n\n}\n\nexport default LeafValuePublisher;","import LeafPublisher from \"./LeafPublisher\";\nimport LeafValuePublisher from \"./LeafValuePublisher\"\n\nclass StateManager {\n\n    /**\n     * THIS IS A DEMO PROPERTY\n     */\n    public static readonly formSubmitted = new LeafPublisher();\n\n    public static readonly isLoggedIn = new LeafValuePublisher(false);\n\n}\n\nexport default StateManager;","\n/**\n * Throw this error in the case where an area of code shouldn't be capable of being reached.\n * For instance, in the default block of a switch statement that should be exhaustively checking an enum.\n * \n * ```\n * switch (primaryColor) {\n *     case PrimaryColor.red:\n *         console.log(\"RED!\");\n *         break;\n *     case PrimaryColor.blue:\n *         console.log(\"BLUE!\");\n *         break;\n *     case PrimaryColor.yellow:\n *         console.log(\"YELLOW!\");\n *         break;\n *     case default:\n *         throw new UnreachableCaseError(primaryColor);\n * }\n * ```\n */\nexport class UnreachableCaseError extends Error {\n    constructor(val: never) {\n        super(`Unreachable case: ${JSON.stringify(val)}`);\n    }\n}","import { UnreachableCaseError } from \"../../language/errors/UnreachableCaseError\";\n\nexport enum OS {\n    ios,\n    android,\n    web,\n    windows,\n    macos,\n    other\n}\n\nexport namespace OS {\n    export function toString(os: OS): string {\n        switch (os) {\n            case OS.ios: \n                return \"iOS\";\n            case OS.android: \n                return \"Android\";\n            case OS.windows: \n                return \"Windows\";\n            case OS.macos: \n                return \"macOS\";\n            case OS.web: \n                return \"Web\";\n            case OS.other: \n                return \"Unknown\";\n            default: \n                throw new UnreachableCaseError(os);\n        }\n    }\n}","import { UnreachableCaseError } from \"../../language/errors/UnreachableCaseError\";\n\nexport enum ScreenType {\n    mobile,\n    large\n}\n\nexport namespace ScreenType {\n    export function toString(screenType: ScreenType): string {\n        switch (screenType) {\n            case ScreenType.mobile:\n                return \"Mobile\";\n            case ScreenType.large:\n                return \"Large\";\n            default:\n                throw new UnreachableCaseError(screenType);\n        }\n    }\n}","import { Dimensions, PlatformIOSStatic } from \"react-native\"\nimport { Platform } from 'react-native';\nimport { UnreachableCaseError } from \"../../language/errors/UnreachableCaseError\";\nimport { OS } from \"./OS\";\nimport { ScreenType } from \"./ScreenType\";\n\nclass Environment {\n\n    public static readonly instance = new Environment()\n\n    private constructor() { }\n\n    public getOS(): OS {\n        switch (Platform.OS) {\n            case 'android':\n                return OS.android;\n            case 'ios':\n                return OS.ios;\n            case 'windows':\n                return OS.windows;\n            case 'macos':\n                return OS.macos;\n            case 'web':\n                return OS.web;\n            default:\n                return OS.other;\n        }\n    }\n\n    public getScreenType(): ScreenType {\n        const os = this.getOS();\n        switch (os) {\n            case OS.ios:\n                return (Platform as PlatformIOSStatic).isPad ? ScreenType.large : ScreenType.mobile;\n            case OS.android:\n                // TODO: Figure out how to detect Android tablets\n                return ScreenType.mobile;\n            case OS.windows:\n            case OS.macos:\n                return ScreenType.large;\n            case OS.web:\n            case OS.other:\n                const dimensions = this.getScreenDimensions();\n                if (dimensions[1] > dimensions[0]) {\n                    // Height > width, assume mobile\n                    return ScreenType.mobile;\n                }\n                // Any landscape screen on a web client can be assumed to be on a large screen\n                return ScreenType.large;\n            default:\n                throw new UnreachableCaseError(os);\n        }\n    }\n\n    private getScreenDimensions(): [number, number] {\n        return [\n            Dimensions.get(\"window\").width,\n            Dimensions.get(\"window\").height\n        ]\n    }\n\n}\n\nexport default Environment;","import { VStack } from 'native-base';\nimport React from 'react';\nimport LeafTextInput, { LeafTextInputType } from './core/views/LeafTextInput/LeafTextInput';\nimport LeafButton, { LeafButtonType } from './core/views/LeafButton/LeafButton';\nimport Session from '../model/Session';\nimport FormEntry from '../model/FormEntry';\nimport StateManager from '../state/StateManager';\nimport {Text} from 'react-native';\nimport Environment from '../state/environment/Environment';\nimport { ScreenType } from '../state/environment/ScreenType';\n\n/**\n * THIS IS A DEMO COMPONENT\n */\n\nconst Form: React.FC = () => {\n    const [text1, setText1] = React.useState(\"\");\n    const [text2, setText2] = React.useState(\"\");\n\n    return (\n        <VStack space={4} padding={4}>\n            <Text>{\"Screen type detected: \" + ScreenType.toString(Environment.instance.getScreenType())}</Text>\n\n            <LeafTextInput \n                label={\"Text 1\"}\n                type={LeafTextInputType.outlined}\n                onTextChange={(text) => {\n                    setText1(text);\n                }}\n            />\n\n            <LeafTextInput \n                label={\"Text 2\"}\n                type={LeafTextInputType.outlined}\n                onTextChange={(text) => {\n                    setText2(text);\n                }}\n            />\n\n            <LeafButton \n                label=\"Submit\"\n                icon=\"send\"\n                type={LeafButtonType.filled} \n                onPress={() => {\n                    let form = new FormEntry(text1, text2);\n                    Session.instance.formEntry = form;\n                    StateManager.formSubmitted.publish();\n                }}\n            />\n        </VStack>\n    );\n}\n\nexport default Form;","import useForceUpdate from 'use-force-update';\nimport Session from '../model/Session';\nimport { Text } from 'react-native-paper';\nimport StateManager from '../state/StateManager';\n\n/**\n * THIS IS A DEMO COMPONENT\n */\n\nconst FormOutput: React.FC = () => {\n    const forceUpdate = useForceUpdate()\n\n    StateManager.formSubmitted.subscribe(() => {\n        // Note, instead of force updating, a standard useState hook could be used instead\n        forceUpdate();\n    })\n\n    let text: string | null = Session.instance.formEntry?.getContent();\n\n    return (\n        <Text variant=\"bodyLarge\" style={{textAlign: 'center', padding: 20}}>\n            {text ?? \"Nothing Yet Submitted\"}\n        </Text>\n    );\n}\n\nexport default FormOutput;","import { StyleSheet, Text, View } from 'react-native';\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\nimport { NativeBaseProvider, VStack } from 'native-base';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Form from './src/components/Form';\nimport FormOutput from './src/components/FormOutput';\n\nexport default function App() {\n  return (\n    <NativeBaseProvider>\n      <PaperProvider theme={theme}>\n        <SafeAreaView>\n          <VStack>\n            <Form />\n            <FormOutput />\n          </VStack>\n        </SafeAreaView>\n      </PaperProvider>\n    </NativeBaseProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    justifyContent: 'center',\n    padding: 15,\n  },\n});\n\nconst theme = {\n  ...DefaultTheme,\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/Leaf/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [98], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["LeafTextInputType","_ref","label","type","onTextChange","_React$useState","React","_React$useState2","_slicedToArray","text","setText","_jsx","TextInput","value","mode","onChangeText","LeafButtonType","_ref$icon","icon","_ref$disabled","disabled","onPress","Button","children","Session","_createClass","_classCallCheck","formEntry","instance","FormEntry","text1","text2","this","key","LeafPublisher","slice","createSlice","name","initialState","reducers","newForm","state","publisher","configureStore","reducer","callback","subscribe","dispatch","actions","LeafValuePublisher","publishAction","newValue","payload","getState","StateManager","formSubmitted","isLoggedIn","UnreachableCaseError","_Error","_inherits","_super","_createSuper","val","call","JSON","stringify","_wrapNativeSuper","Error","OS","toString","os","ios","android","windows","macos","web","other","ScreenType","screenType","mobile","large","Environment","Platform","getOS","dimensions","getScreenDimensions","Dimensions","width","height","setText1","_React$useState3","_React$useState4","setText2","_jsxs","VStack","space","padding","Text","LeafTextInput","outlined","LeafButton","filled","form","_Session$instance$for","forceUpdate","useForceUpdate","getContent","variant","style","textAlign","App","NativeBaseProvider","PaperProvider","theme","SafeAreaView","Form","FormOutput","StyleSheet","container","flex","backgroundColor","justifyContent","_objectSpread","DefaultTheme","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","id","loaded","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}